@*Razor page for displaying a user profile*@
@page "//Profile"
@using DatingApp.Models
@using DatingApp.Repository
@using DatingApp.Service
@inject NavigationManager NM
@inject UserRepository repo
@inject UserProfile UserProfile
@inject AuthenticationService authService

<h3>Profile</h3>

<p>Username: @UserProfile.Username</p>
<p>Fullname: @UserProfile.Fullname</p>
<p>Brithdate: @UserProfile.Brithdate.ToShortDateString()</p>
<p>Height: @UserProfile.Height</p>
<p>About me: @UserProfile.Aboutme</p>
<p>City: @repo.GetcityName(UserProfile.Cityid)</p>
<p>Gender: @repo.GetGenderName(UserProfile.Genderid)</p>

<h4>Liked profiles</h4>
@if(likedProfiles != null && likedProfiles.Any())
{
    <ul>
        @foreach(var likedprofile in likedProfiles)
        {
            <li>@likedprofile.Username</li>
        }
    </ul>
}
else
{
    <p>no liked profiles.</p>
}
<button @onclick="()=>NavigateToEditProfile(true)">Edit Profile</button>
<button @onclick="Logout">Logout</button>

@*Code block for handling Profile page*@
@code{
    private List<UserProfile> likedProfiles;
    protected override void OnInitialized()
    {
        int loggedInUser = authService.LoggedInUser?.UserId ?? 0;
        UserProfile = repo.GetUserProfile(loggedInUser);
        likedProfiles = repo.GetLikedProfiles(loggedInUser);
    }
    private void NavigateToEditProfile(bool IsEditMode)
    {
        NM.NavigateTo($"/CreateProfile/{UserProfile.UserId}?edit={IsEditMode}");
    }
    private void Logout()
    {
        authService.logout();
        NM.NavigateTo("/UserLogin");
    }
    private void ToogleLike(int Likee)
    {
        if (authService.LoggedInUser != null)
        {
            int liker = authService.LoggedInUser.UserId;
            bool isLiked = repo.IsLiked(liker,Likee);
            if (isLiked)
            {
                repo.RemovieLike(liker, Likee);
            }
            else
            {
                repo.AddLike(liker, Likee);
            }
            likedProfiles = repo.GetLikedProfiles(liker);
        }
    }
}